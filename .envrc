######## JAMBHALA ENVIRONMENT CONFIGURATION ########
# Do not modify the contents of this file!
# To modify your configuration, change values of variables in the .env file.
# The .env file is created automatically for you when you load the environment the first time.
# Type ENTER/RETURN in your terminal session after modifying .env to apply your changes.

#### GENERAL SETUP ####
export PROJECT_ROOT=$(git rev-parse --show-toplevel)

# Fix project if cloned without --recurse-submodules flag:
submodules=("jambhalucid" "cardano-ez-installer" "cardano-cli-guru" "cardano-devnet")

for submodule in "${submodules[@]}"
do
  if [ ! "$(ls -A $submodule)" ]; then
    git submodule update --init --recursive
    git submodule foreach 'git checkout main'
    break
  fi
done

# Add setup and utility scripts to PATH
PATH_add ./setup:./scripts/

#### LOAD NIX ENVIRONMENT ####

# Use nix-direnv for caching/persistence:
if ! has nix_direnv_version || ! nix_direnv_version 2.3.0; then
  source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/2.3.0/direnvrc" "sha256-Dmd+j63L84wuzgyjITIfSxSD57Tx7v51DMxVZOsiUD8="
fi

# Allow unfree packages (for closed-source VS Code extensions):
export NIXPKGS_ALLOW_UNFREE=1

# Disable Boehm garbage collection on Macs to prevent seg-fault
if [[ "$(uname)" == "Darwin" ]]; then
  export GC_DONT_GC=1
fi

# Load the Nix environment from flake.nix:
use flake . --impure --accept-flake-config

# Create symlink to HLS binary to prevent buggy VS Code/Codium behavior (conflict with GHCup binaries)
ln -s -f $(which haskell-language-server) .vscode/haskell-language-server.link

# Source Cardano Guru environment if not already loaded (makes Guru commands available from project root)
export JAMB_ENV_LOADED=true
if [[ $GURU_ENV_LOADED != true ]]; then
  source_env "$PROJECT_ROOT/cardano-cli-guru"
fi

if [[ $DEVNET_ENV_LOADED != true ]]; then
  source_env "$PROJECT_ROOT/cardano-devnet"
fi

#### .ENV CONFIG ####

# Create .env file with default environment variables if absent:
if [ ! -f .env ]; then
  touch .env
  cat <<EOF >> .env
NODE_RELEASE="8.1.2" # Replace with newer version and re-run the script to update your installation
OGMIOS_RELEASE="6.0.0-rc2" # Replace with newer version and re-run the script to update your installation
CARDANO_SRC_PATH="\$HOME/cardano-src" # Where cardano-node source files will be saved
CARDANO_PATH="\$HOME/cardano" # Where node database and config files will be saved
VIM_MODE=false # Whether to enable neovim extension in jcode editor
GITHUB_ID="" # GitHub username (for optional haskell-dojo integration)
EOF
fi
# Source and watch the .env file:
dotenv
watch_file .env

#### JAMBHALUCID SETUP ####

# Create .env.local file for Jambhalucid and populate with existing variables
env_local="$PROJECT_ROOT/jambhalucid/.env.local"
rm $env_local
if [ "$CARDANO_NODE_NETWORK_ID" == "1" ]; then
  TESTNET_NAME="preprod"
else
  TESTNET_NAME="preview"
fi
touch "$env_local"
cat <<EOF >> "$env_local"
TESTNET_NAME=$TESTNET_NAME
BLOCKFROST_PROJECT_ID_PREPROD=$BLOCKFROST_PROJECT_ID_PREPROD
BLOCKFROST_PROJECT_ID_PREVIEW=$BLOCKFROST_PROJECT_ID_PREVIEW
EOF

#### HASKELL DOJO SETUP ####

if [ ! -d "$PWD/haskell-dojo" ]; then
  if [ -n "$GITHUB_ID" ]; then
    repo_url="https://github.com/$GITHUB_ID/haskell-dojo"  
    if curl --output /dev/null --silent --head --fail "$repo_url"; then  
      git clone "$repo_url"
    fi
  fi
fi
